name: Pull Request Checks

# This workflow runs on all PRs to validate code quality
# No deployment happens - just testing and validation

on:
  pull_request:
    branches: [ main, develop, feature/* ]

env:
  NODE_VERSION: '18'

jobs:
  # Quick validation checks
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for secrets in code
      run: |
        echo "üîç Scanning for hardcoded secrets..."
        
        # Check for common secret patterns
        if git grep -E "(sk_live_|pk_live_|xkeysib-|mongodb\+srv://[^:]+:[^@]+@)" -- ':!*.md' ':!*.example' ':!*.dist'; then
          echo "‚ùå Found potential secrets in code!"
          echo "Please remove any hardcoded credentials"
          exit 1
        fi
        
        echo "‚úÖ No hardcoded secrets found"

    - name: Check file sizes
      run: |
        echo "üì¶ Checking for large files..."
        
        # Find files larger than 1MB (excluding node_modules and dist)
        find . -type f -size +1M \
          -not -path "*/node_modules/*" \
          -not -path "*/dist/*" \
          -not -path "*/.git/*" \
          -not -path "*/public/uploads/*" || true
        
        echo "‚úÖ File size check complete"

  # Backend validation
  backend-check:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Check for syntax errors
      working-directory: ./backend
      run: |
        echo "üîç Checking JavaScript syntax..."
        node -c server-working.js
        echo "‚úÖ No syntax errors found"

    - name: Run tests (if available)
      working-directory: ./backend
      run: npm test || echo "‚ö†Ô∏è No tests configured"
      continue-on-error: true
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/bazaarmkt-test
        JWT_SECRET: test-jwt-secret-at-least-64-characters-long-for-testing-purposes
        PORT: 4000

  # Frontend validation
  frontend-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      env:
        VITE_API_URL: https://www.bazaarmkt.ca/api
        VITE_BASE_URL: https://www.bazaarmkt.ca
        VITE_STRIPE_PUBLISHABLE_KEY: pk_test_dummy_key_for_build
        VITE_NODE_ENV: production

    - name: Check build size
      working-directory: ./frontend
      run: |
        echo "üìä Build size analysis:"
        du -sh dist/
        du -sh dist/assets/ || true
        echo "‚úÖ Build completed successfully"

  # Summary
  pr-ready:
    runs-on: ubuntu-latest
    needs: [validate, backend-check, frontend-check]
    steps:
    - name: PR checks passed
      run: |
        echo "‚úÖ All PR checks passed!"
        echo ""
        echo "This PR is ready for review."
        echo ""
        echo "Next steps:"
        echo "1. Code review by team member"
        echo "2. Manual testing if needed"
        echo "3. Merge when approved"

